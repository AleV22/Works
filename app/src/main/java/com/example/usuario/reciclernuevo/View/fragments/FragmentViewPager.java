package com.example.usuario.reciclernuevo.View.fragments;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.view.ViewPager;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.example.usuario.reciclernuevo.Controller.ControllerNews;import com.example.usuario.reciclernuevo.Model.POJO.News;import com.example.usuario.reciclernuevo.R;import com.example.usuario.reciclernuevo.View.adapters.ViewPagerAdapterDetail;import com.example.usuario.reciclernuevo.util.ResultListener;import java.util.ArrayList;import java.util.List;public class FragmentViewPager extends Fragment {    public static final String POSITION = "position";    public static final String KEY_SORTEDBY = "keysortedBy";    public static final String KEY_SOURCE = "keysource";    public static final String KEY_LISTFAV = "listaFav";    private List<News> listaDeNews = new ArrayList<>();    private ViewPagerAdapterDetail myViewPagerAdapterDetail;    private ViewPager viewPager;    private Bundle bundle;    private Integer posicion;    private String source;    private String sortedBy;    private List<String> availableChannelsList;    private List<News> listaNewsFavorites;    private ControllerNews controllerNews;    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_view_pager, container, false);        //receiving info of position and sortedBy:        bundle = getArguments();        //hasta aqui tambien llega la posicion...        posicion = bundle.getInt(POSITION);        source = bundle.getString(KEY_SOURCE);        sortedBy = bundle.getString(KEY_SORTEDBY);        FragmentManager fragmentManager = getActivity().getSupportFragmentManager();        myViewPagerAdapterDetail = new ViewPagerAdapterDetail(fragmentManager);        myViewPagerAdapterDetail.setListaDeNews(listaDeNews);        viewPager = (ViewPager) view.findViewById(R.id.viewPagerDetalleNews);        viewPager.setAdapter(myViewPagerAdapterDetail);        viewPager.setPageMargin(15);        viewPager.setClipToPadding(false);        fragmentManager = getActivity().getSupportFragmentManager();        myViewPagerAdapterDetail = new ViewPagerAdapterDetail(fragmentManager);        myViewPagerAdapterDetail.setListaDeNews(listaDeNews);        viewPager = (ViewPager) view.findViewById(R.id.viewPagerDetalleNews);        viewPager.setAdapter(myViewPagerAdapterDetail);        viewPager.setPageMargin(15);        viewPager.setClipToPadding(false);        listaNewsFavorites = new ArrayList<>();        controllerNews = new ControllerNews();        //Despues no va hacer falta volver a llamar al controller        if (sortedBy!=null) {            controllerNews.obtenerNews(getContext(), new ResultListener<List<News>>() {                @Override                public void finish(List<News> resultado) {                    myViewPagerAdapterDetail.setListaDeNews(resultado);                    myViewPagerAdapterDetail.notifyDataSetChanged();                    viewPager.setCurrentItem(posicion);                }            },source ,sortedBy);        } else {            myViewPagerAdapterDetail.setListaDeNews(controllerNews.getListDeFavoritos(getContext()));            //aqui no se esta utilizando la posici[on            viewPager.setCurrentItem(posicion);            myViewPagerAdapterDetail.notifyDataSetChanged();        }        return view;    }}